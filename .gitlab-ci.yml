image:
  name: amazon/aws-cli
  entrypoint: [""]
services:
  - name: docker:20-dind
    command: ["--tls=false"]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay
  DOCKER_TLS_CERTDIR: ""
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
  GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - Build image and Push to Docker Hub
  - deploy
  - sonarcloud-check

docker build and push:
  stage: Build image and Push to Docker Hub
  image: docker:latest
  only:
    - main

  before_script:
    - docker --version
    - echo "$CR_PAT" | docker login ghcr.io -u "$REGISTRY_USER" --password-stdin
  script:
    - docker build --file fr.Dockerfile -t ghcr.io/$REGISTRY_USER/bc41frontend:latest .
    - docker push ghcr.io/$REGISTRY_USER/bc41frontend:latest
    - docker build --file db.Dockerfile -t ghcr.io/$REGISTRY_USER/bc41jsonserver:latest .
    - docker push ghcr.io/$REGISTRY_USER/bc41jsonserver:latest

deploy:
  stage: deploy
  image: odaniait/aws-kubectl

  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

  script:
    - cd deployment
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
    - kubectl apply -f .
    - exit
  only:
    - main

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - npm install
    - npm test
    - npm run build-storybook
    - sonar-scanner
    - npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod --dir=storybook-static
  only:
    - merge_requests
    - main
    - BC41ZD-3-storybook-deployment-to-netlify
